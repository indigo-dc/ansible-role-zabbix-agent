---
  - name: Download Zabbix Debian 8 release deb file
    get_url: 
      url="http://repo.zabbix.com/zabbix/3.0/debian/pool/main/z/zabbix-release/zabbix-release_3.0-1+jessie_all.deb"
      dest="/tmp/zabbix-release_3.0-1.deb"
    when: ansible_os_family == "Debian" and ansible_distribution == "Debian" and ansible_distribution_major_version == 8
    
  - name: Download Zabbix Debian 7 release deb file
    get_url: 
      url="http://repo.zabbix.com/zabbix/3.0/debian/pool/main/z/zabbix-release/zabbix-release_3.0-1+wheezy_all.deb"
      dest="/tmp/zabbix-release_3.0-1.deb"
    when: ansible_os_family == "Debian" and ansible_distribution == "Debian" and ansible_distribution_major_version == 7
    
  - name: Download Zabbix Ubuntu 14 release deb file
    get_url: 
      url="http://repo.zabbix.com/zabbix/3.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.0-1+trusty_all.deb"
      dest="/tmp/zabbix-release_3.0-1.deb"
    when: ansible_os_family == "Debian" and ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14"

  - name: Apt install Zabbix release in Ubuntu/Debian
    apt: deb="/tmp/zabbix-release_3.0-1.deb"
    when: ansible_os_family == "Debian"
    notify: Apt-get update

  - name: Yum install Zabbix release in RHEL or CentOS
    yum: name=http://repo.zabbix.com/zabbix/3.0/rhel/{{ ansible_distribution_major_version }}/x86_64/zabbix-release-3.0-1.el{{ ansible_distribution_major_version }}.noarch.rpm
    when: ansible_os_family == "RedHat"
    
  - name: Apt install Zabbix agent
    apt: name=zabbix-agent
    when: ansible_os_family == "Debian"

  - name: Yum install Zabbix agent
    yum: name=zabbix-agent
    when: ansible_os_family == "RedHat"

  - lineinfile: dest=/etc/zabbix/zabbix_agentd.conf regexp="{{ item.var }}=" line="{{ item.var }}={{ item.value }}"
    with_items:
      - { var: "ServerActive", value: "{{zabbix_agent_server}}:{{zabbix_agent_server_port}}"}
      - { var: "Hostname", value: "{{zabbix_agent_hostname_prefix}}{{ansible_hostname}}"}
      - { var: "StartAgents", value: "0"}
      - { var: "HostMetadata", value: "{{ zabbix_agent_metadata }}"}
      - { var: "RefreshActiveChecks", value: "60"}
    notify: restart zabbix-agent
     
  - lineinfile: dest=/etc/zabbix/zabbix_agentd.conf regexp="{{ item }}=" state=absent
    with_items:
      - "Server="
      - "Include="
    notify: restart zabbix-agent

  - name: Start Zabbix agent service
    service: name=zabbix-agent state=started

